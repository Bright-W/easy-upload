{
  "version": 3,
  "sources": ["../src/const.js", "../src/target.js", "../src/common.js", "../src/source/ptp.js", "../src/source/chd.js", "../src/source/mteam.js", "../src/source/index.js", "../src/style.js", "../src/index.js"],
  "sourcesContent": ["import { PT_SITE } from './config.yaml';\nconst $ = jQuery\nconst TORRENT_INFO = {\n  title: '', // \u6807\u9898\n  subtitle: '', // \u526F\u6807\u9898\n  description: '', // \u63CF\u8FF0\n  year: '', // \u7535\u5F71\u5E74\u4EFD\n  category: '', // \u7535\u5F71\u3001\u7535\u89C6\u3001\u97F3\u4E50\u7B49\n  videoType: '', // bluray remux encodes web-dl\n  source: '', // \u89C6\u9891\u6765\u6E90\n  videoCodes: '', // \u89C6\u9891\u7F16\u7801\n  audioCodes: '', // \u97F3\u9891\u7F16\u7801\n  resolution: '', // \u5206\u8FA8\u7387\n  area: '', // \u5730\u533A\n  doubanUrl: '', // \u8C46\u74E3\u5730\u5740\n  doubanInfo: '', // \u8C46\u74E3\u7B80\u4ECB\n  imdbUrl: '', // imdb\u5730\u5740\n  tags: '', // \u6807\u7B7E diy \u4E2D\u5B57 \u56FD\u914D\u7B49\n  mediaInfo: '',\n  bdinfo: '',\n  screenshots: [],\n  movieAkaName: '', // \u522B\u540D\u4E00\u822C\u4E3A\u7535\u5F71\u82F1\u6587\u540D\u79F0\n  movieName: '', // imdb\u7535\u5F71\u539F\u59CB\u540D\u79F0 \u4E00\u822C\u4E3A\u62FC\u97F3\n  sourceSite: '', // \u79CD\u5B50\u6765\u6E90\u7AD9\u70B9\u7B80\u79F0\n};\n// \u5FEB\u901F\u68C0\u7D22\nconst SEARCH_SITE_MAP = {\n  HDB: 'https://hdbits.org/browse.php?search={imdbid}&sort=size&h=8&d=DESC',\n  PTP: 'https://passthepopcorn.me/torrents.php?action=advanced&searchstr={imdbid}',\n  MTeam: 'https://pt.m-team.cc/torrents.php?incldead=0&spstate=0&inclbookmarked=0&search={imdbid}&search_area={searchArea}&search_mode=0',\n  TTG: 'https://totheglory.im/browse.php?search_field={imdbid}&c=M&sort=5&type=desc',\n  CHD: 'https://chdbits.co/torrents.php?incldead=0&spstate=0&inclbookmarked=0&search={imdbid}&search_area=4&search_mode=0',\n  BHD: 'https://beyond-hd.me/torrents/all?doSearch=Search&imdb={imdbid}&sorting=size&direction=desc',\n  BLU: 'https://blutopia.xyz/torrents?imdb={imdbid}',\n  AHD: 'https://awesome-hd.me/torrents.php?searchstr={imdbid}',\n  SSD: 'https://springsunday.net/torrents.php?incldead=0&spstate=0&inclbookmarked=0&search={imdbid}&search_area={searchArea}&search_mode=0',\n};\nconst API_KEY = '054022eaeae0b00e0fc068c0c0a2102a';\nconst DOUBAN_API_URL = 'https://frodo.douban.com/api/v2';\nconst DOUBAN_SEARCH_API = 'https://omit.mkrobot.org/movie/infos';\nconst PT_GEN_API = 'https://media.pttool.workers.dev';\nconst getSiteName = (host) => {\n  let siteName = '';\n  try {\n    Object.keys(PT_SITE).forEach(key => {\n      const hostName = PT_SITE[key].host;\n      if (hostName && host === hostName) {\n        siteName = key;\n      }\n    });\n    return siteName;\n  } catch (error) {\n    if (error.message !== 'end loop') {\n      console.log(error);\n    }\n  }\n};\nconst CURRENT_SITE_NAME = getSiteName(location.host);\nconst CURRENT_SITE_INFO = PT_SITE[CURRENT_SITE_NAME];\n\nexport {\n  TORRENT_INFO,\n  API_KEY,\n  DOUBAN_API_URL,\n  DOUBAN_SEARCH_API,\n  PT_GEN_API,\n  CURRENT_SITE_NAME,\n  CURRENT_SITE_INFO,\n  SEARCH_SITE_MAP,\n  PT_SITE,\n}\n;\n", "import { CURRENT_SITE_INFO, CURRENT_SITE_NAME } from './const';\nconst getDescription = (info) => {\n  const thanksQuote = `[quote][size=4]source from [b][color=#1A73E8]${info.sourceSite}[/color][/b]. Many thanks to the original uploader![/size][/quote]`;\n  const siteInfo = CURRENT_SITE_INFO;\n  const doubanInfo = (!siteInfo.needDoubanInfo && info.doubanInfo) ? `${info.doubanInfo}\\n` : '';\n  const logs = info.logs ? `eac3to logs:\\n[hide]${info.logs}[/hide]\\n\\n` : '';\n  const bdinfo = info.bdinfo ? `BDInfo:\\n${info.bdinfo}\\n\\n` : '';\n  const mediaInfo = siteInfo.mediaInfo ? '' : `[quote]${info.mediaInfo}[/quote]\\n`;\n  const screenshots = info.screenshots.map(img => {\n    return `[img]${img}[/img]`;\n  });\n  const screenshotsPart = CURRENT_SITE_NAME === 'SSD' ? '' : `\\n\\nScreens:\\n${screenshots.join('')}`;\n  return `${thanksQuote}\\n\\n${doubanInfo}${mediaInfo}${info.description}\\n\\n${logs}${bdinfo}${screenshotsPart}`;\n};\nconst fillTargetForm = (info) => {\n  console.log(CURRENT_SITE_INFO);\n  $(CURRENT_SITE_INFO.imdb.selector).val(info.imdbUrl);\n  if (CURRENT_SITE_NAME === 'HDB') {\n    let mediaTitle = info.title.replace(/([^\\d]+)\\s+(\\d+)/, (match, p1, p2) => {\n      return `${info.movieName || info.movieAkaName} ${p2}`;\n    });\n    if (info.videoType === 'remux') {\n      mediaTitle = mediaTitle.replace(/\\s+(bluray|blu-ray)/ig, '');\n    }\n    info.title = mediaTitle;\n  }\n  if (CURRENT_SITE_NAME === 'SSD') {\n    $(CURRENT_SITE_INFO.imdb.selector).val(info.doubanUrl || info.imdbUrl);\n    $(CURRENT_SITE_INFO.screenshots.selector).val(info.screenshots.join('\\n'));\n  }\n\n  $(CURRENT_SITE_INFO.name.selector).val(info.title);\n  if (CURRENT_SITE_INFO.subtitle) {\n    $(CURRENT_SITE_INFO.subtitle.selector).val(info.subtitle);\n  }\n  const mediaInfo = info.videoType.match(/bluray|uhdbluray/ig) ? '' : info.mediaInfo;\n  const description = getDescription(info);\n  if (CURRENT_SITE_INFO.mediaInfo) {\n    $(CURRENT_SITE_INFO.mediaInfo.selector).val(mediaInfo);\n  }\n  $(CURRENT_SITE_INFO.description.selector).val(description);\n  if (CURRENT_SITE_INFO.area && CURRENT_SITE_INFO.area.selector) {\n    $(CURRENT_SITE_INFO.area.selector).val(CURRENT_SITE_INFO.area.map[info.area]);\n  }\n  $(CURRENT_SITE_INFO.description.selector).val(description);\n  const category = CURRENT_SITE_INFO.category.map[info.category];\n  const keyArray = ['videoCodes', 'videoType', 'resolution', 'source'];\n  let finalSelectArray = [];\n  if (Array.isArray(category)) {\n    finalSelectArray = [...category];\n    keyArray.forEach(key => {\n      finalSelectArray = matchSelectForm(CURRENT_SITE_INFO, info, key, finalSelectArray);\n      if (finalSelectArray.length === 1) {\n        $(CURRENT_SITE_INFO.category.selector).val(finalSelectArray[0]);\n      }\n    });\n  } else {\n    [...keyArray, 'category'].forEach(key => {\n      matchSelectForm(CURRENT_SITE_INFO, info, key, finalSelectArray);\n    });\n  }\n  if (CURRENT_SITE_INFO.douban) {\n    $(CURRENT_SITE_INFO.douban.selector).val(info.doubanUrl);\n  }\n};\n/*\n* \u5404\u4E2A\u5B57\u6BB5\u4E4B\u95F4\u53D6\u4EA4\u96C6\u586B\u5165\u8868\u5355\n* @param {siteInfo} \u5F53\u524D\u7AD9\u70B9\u7684\u914D\u7F6E\n* @param {key} \u8981\u586B\u5165\u7684\u5B57\u6BB5key\n* @param {movieInfo} \u8981\u586B\u5165\u7684\u79CD\u5B50\u4FE1\u606F\n* @param {selectArray} \u6B64\u65F6\u5206\u7C7B\u5BF9\u5E94\u7684\u503C\n* @return \u53D6\u5F53\u524Dkey\u5BF9\u5E94\u7684value\u53D6\u4EA4\u96C6\u4E4B\u540E\u7684\u6570\u7EC4\n* */\nconst matchSelectForm = (siteInfo, movieInfo, key, selectArray) => {\n  const value = siteInfo[key] ? siteInfo[key].map[movieInfo[key]] : undefined;\n  if (Array.isArray(value) && selectArray) {\n    if (selectArray.length > 1) {\n      selectArray = selectArray.filter(item => value.includes(item));\n    }\n    if (siteInfo[key].selector) {\n      $(siteInfo[key].selector).val(value[0]);\n    }\n  } else if (siteInfo[key] && siteInfo[key].selector) {\n    $(siteInfo[key].selector).val(value);\n  }\n  return selectArray;\n};\nexport {\n  fillTargetForm,\n}\n;\n", "\nconst formatTorrentTitle = (title) => {\n  // \u4FDD\u75595.1 H.264\u4E2D\u95F4\u7684\u70B9\n  return title.replace(/(?<!(([^\\d]+\\d{1})|([^\\w]+H)))(\\.)/ig, ' ').replace(/\\.(?!(\\d+))/, ' ').trim();\n};\n\nconst getUrlParam = (key) => {\n  const reg = new RegExp('(^|&)' + key + '=([^&]*)(&|$)');\n  const regArray = location.search.substr(1).match(reg);\n  if (regArray) {\n    return unescape(regArray[2]);\n  }\n  return '';\n};\nconst getAudioCodes = (torrentInfo) => {\n  const { title, mediaInfo, bdinfo } = torrentInfo;\n};\n\n// \u83B7\u53D6\u526F\u6807\u9898\nconst getSubTitle = (data) => {\n  const titles = data.trans_title.join('/');\n  const { director = [] } = data;\n  const directorArray = director.map(item => {\n    return replaceEngName(item.name);\n  });\n  // \u6F14\u5458\u53EA\u9009\u62E9\u524D\u4E24\u4F4D\n  const mainCast = data.cast.slice(0, 2).map(cast => {\n    return replaceEngName(cast.name);\n  });\n  const directorStr = directorArray.length > 0 ? `|\u5BFC\u6F14: ${directorArray.join(' ')}` : '';\n  const castStr = mainCast.length > 0 ? `|\u4E3B\u6F14:${mainCast.join(' ')}` : '';\n  return titles + directorStr + castStr;\n};\n/*\n* \u66FF\u6362\u8C46\u74E3\u6F14\u5458\u4E2D\u7684\u82F1\u6587\u540D\u79F0\n* @param {any}\n* @return\n* */\nconst replaceEngName = (string) => {\n  return string.replace(/\\s+[A-Za-z\\s]+/, '');\n};\n\nexport {\n  getUrlParam,\n  formatTorrentTitle,\n  getAudioCodes,\n  replaceEngName,\n  getSubTitle,\n}\n;\n", "import { CURRENT_SITE_NAME, TORRENT_INFO } from '../const';\nimport { getUrlParam, formatTorrentTitle } from '../common';\n\nexport default () => {\n  const torrentId = getUrlParam('torrentid');\n  console.log(torrentId);\n  if (!torrentId) {\n    return false;\n  }\n  TORRENT_INFO.sourceSite = CURRENT_SITE_NAME;\n  const torrentDom = $(`#torrent_${torrentId}`);\n  const ptpMovieTitle = $('.page__title').text().match(/(^|])([^\\d[]+)/)[2].trim();\n  const [movieName, movieAkaName = ''] = ptpMovieTitle.split(' AKA ');\n  TORRENT_INFO.movieName = movieName;\n  TORRENT_INFO.movieAkaName = movieAkaName;\n  TORRENT_INFO.imdbUrl = $('#imdb-title-link').attr('href') || '';\n  TORRENT_INFO.year = $('.page__title').text().match(/\\[(\\d+)\\]/)[2];\n  const torrentHeaderDom = $(`#group_torrent_header_${torrentId}`);\n  let torrentName = torrentHeaderDom.data('releasename');\n  torrentName = formatTorrentTitle(torrentName);\n  TORRENT_INFO.title = torrentName;\n  TORRENT_INFO.category = getPTPType();\n  if (TORRENT_INFO.category === 'music') {\n    TORRENT_INFO.description = $('#synopsis').text();\n  }\n  const infoArray = torrentHeaderDom.find('#PermaLinkedTorrentToggler').text().replace(/ /g, '').split('/');\n  const [codes, container, source, resolution, ...otherInfo] = infoArray;\n  const isRemux = otherInfo.includes('Remux');\n  TORRENT_INFO.videoType = source === 'WEB' ? 'web' : getVideoType(container, isRemux, codes, source);\n  TORRENT_INFO.videoCodes = getPtpCodes(codes);\n  TORRENT_INFO.source = getPTPSource(source, codes, resolution);\n  TORRENT_INFO.resolution = getPTPResolution(resolution);\n  const { logs, bdinfo } = getPTPLogsOrBDInfo(torrentDom);\n  TORRENT_INFO.logs = logs;\n  TORRENT_INFO.bdinfo = bdinfo;\n  TORRENT_INFO.mediaInfo = `${torrentDom.find('.mediainfo.mediainfo--in-release-description').next('blockquote').text()}`;\n  TORRENT_INFO.screenshots = getPTPImage(torrentDom);\n  TORRENT_INFO.area = getAreaCode();\n  return TORRENT_INFO;\n};\nconst getPTPType = () => {\n  const typeMap = {\n    'Feature Film': 'movie',\n    'Short Film': 'movie',\n    'Stand-up Comedy': 'other',\n    Miniseries: 'tv',\n    'Live Performance': 'concert',\n    'Movie Collection': 'movie',\n  };\n  const ptpType = $('#torrent-table .basic-movie-list__torrent-edition__main').eq(0).text();\n  return typeMap[ptpType];\n};\n// \u83B7\u53D6eac3to\u65E5\u5FD7\nconst getPTPLogsOrBDInfo = (torrentDom) => {\n  const quoteList = torrentDom.find('.movie-page__torrent__panel blockquote');\n  let logs = ''; let bdinfo = '';\n  for (let i = 0; i < quoteList.length; i++) {\n    const quoteContent = quoteList[i].textContent;\n    if (quoteContent.includes('eac3to')) {\n      logs += `[quote]${quoteContent}[/quote]`;\n    }\n    if (quoteContent.includes('DISC INFO:')) {\n      bdinfo += `[quote]${quoteContent}[/quote]`;\n    }\n  }\n  return {\n    logs,\n    bdinfo,\n  };\n};\n// \u83B7\u53D6\u622A\u56FE\nconst getPTPImage = () => {\n  let isComparison = false;\n  let imgList = [];\n  const torrentInfoPanel = $('.movie-page__torrent__panel');\n  const links = torrentInfoPanel.find('a');\n  for (let i = 0; i < links.length; i++) {\n    const clickFunc = links[i].getAttribute('onclick');\n    if (clickFunc && clickFunc.includes('BBCode.ScreenshotComparisonToggleShow')) {\n      isComparison = true;\n      imgList = JSON.parse(clickFunc.match(/\\[\"http([^\\]]*)\\]/)[0]);\n      break;\n    }\n  }\n  if (!isComparison) {\n    const imageDom = torrentInfoPanel.find('.bbcode__image');\n    for (let i = 0; i < imageDom.length; i++) {\n      imgList.push(imageDom[i].getAttribute('src'));\n    }\n  }\n  return imgList;\n};\nconst getPTPSource = (source, codes, resolution) => {\n  if (codes.match(/BD100|BD66/i)) {\n    return 'uhdbluray';\n  }\n  if (source.match(/Blu-ray/i) && resolution.match(/2160P|4K/i)) {\n    return 'uhdbluray';\n  }\n  return source.replace(/-/g, '').toLowerCase();\n};\nconst getPtpCodes = (codes) => {\n  if (codes === 'BD66' || codes === 'BD100') {\n    return 'hevc';\n  }\n  if (codes.startsWith('BD')) {\n    return 'h264';\n  }\n  if (codes.startsWith('DVD')) {\n    return 'mpeg2';\n  }\n  return codes.replace(/[.-]/g, '').toLowerCase();\n};\nconst getVideoType = (container, isRemux, codes, source) => {\n  let type = '';\n  if (isRemux) {\n    type = 'remux';\n  } else if (codes.match(/BD50|BD25/ig)) {\n    type = 'bluray';\n  } else if (codes.match(/BD66|BD100/ig)) {\n    type = 'uhdbluray';\n  } else if (source.match(/DVD/ig) && container.match(/MKV|AVI/ig)) {\n    type = 'dvdrip';\n  } else if (codes.match(/DVD5|DVD9/ig) && container.match(/VOB|ISO/ig)) {\n    type = 'dvd';\n  } else if (container.match(/MKV|MP4/i)) {\n    type = 'encode';\n  }\n  return type;\n};\nconst getPTPResolution = (resolution) => {\n  if (resolution.match(/NTSC|PAL/ig)) {\n    return '480p';\n  } else if (resolution.match(/\\d{3}x\\d{3}/)) {\n    return '480p';\n  }\n  return resolution;\n};\nconst getAreaCode = () => {\n  const europeList = ['Albania', 'Andorra', 'Armenia', 'Austria', 'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Kazakhstan', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'];\n  let country = [];\n  const matchArray = $('#movieinfo div').text().match(/Country:\\s+([^\\n]+)/);\n  if (matchArray && matchArray.length > 0) {\n    country = matchArray[1].replace(/(,)\\s+/g, '$1').split(',');\n  }\n  if (country[0]) {\n    if (country[0].match(/USA|Canada/i)) {\n      return 'US';\n    } else if (europeList.includes(country[0])) {\n      return 'EU';\n    } else if (country[0].match(/Japan/i)) {\n      return 'JP';\n    } else if (country[0].match(/Korea/i)) {\n      return 'KR';\n    } else if (country[0].match(/Taiwan/i)) {\n      return 'TW';\n    } else if (country[0].match(/Hong Kong/i)) {\n      return 'HK';\n    } else if (country[0].match(/China/i)) {\n      return 'CN';\n    }\n  }\n  return 'OT';\n};\n", "import { CURRENT_SITE_NAME, TORRENT_INFO } from '../const';\nimport { getUrlParam, formatTorrentTitle } from '../common';\n\nexport default () => {\n  console.log('call getCHDInfo function')\n  const torrentDom = $(`#top`);\n  const metaInfo = $(\"td.rowhead:contains('\u57FA\u672C\u4FE1\u606F'):last\").next().text();\n  TORRENT_INFO.sourceSite = CURRENT_SITE_NAME;\n  TORRENT_INFO.movieName = $('#top').prop ('firstChild').nodeValue.trim();\n  TORRENT_INFO.movieAkaName = $(\"td.rowhead:contains('\u526F\u6807\u9898'):last\").next().text();\n  TORRENT_INFO.imdbUrl = $('#kimdb>a').attr('href')|| '';\n  TORRENT_INFO.year = $('#top').text().match(/\\d{4}/g)[0];\n  TORRENT_INFO.title = $('#top').prop('firstChild').nodeValue.trim();\n  let desc_dom = $('#kdescr').clone();\n  desc_dom.find('fieldset').remove();\n  TORRENT_INFO.description = desc_dom.text().trim();\n  TORRENT_INFO.subtitle = $(\"td.rowhead:contains('\u526F\u6807\u9898'):last\").next().text();\n  let category = getMeta(metaInfo, '\u7C7B\u578B');\n  TORRENT_INFO.category = getCategory(category);\n  let videoType = getMeta(metaInfo, '\u5A92\u4ECB');\n  TORRENT_INFO.videoType = getVideoType(videoType);\n  let videoCodes = getMeta(metaInfo, '\u7F16\u7801');\n  TORRENT_INFO.videoCodes = getVideoCodes(videoCodes);\n  TORRENT_INFO.audioCodes = getMeta(metaInfo, '\u97F3\u9891\u7F16\u7801');\n  // TORRENT_INFO.source = getPTPSource(source, codes, resolution);\n  TORRENT_INFO.resolution = getMeta(metaInfo, '\u5206\u8FA8\u7387');\n  TORRENT_INFO.bdinfo = getBDInfo();\n  // TORRENT_INFO.mediaInfo = `${torrentDom.find('.mediainfo.mediainfo--in-release-description').next('blockquote').text()}`;\n  TORRENT_INFO.screenshots = getImages(torrentDom);\n\n  // processing = getMeta(metaInfo, '\u5904\u7406');\n  // TORRENT_INFO.area = getAreaCode(processing);\n  // createSeedDom(torrentDom, TORRENT_INFO);\n  return TORRENT_INFO\n};\n\n// Category sample:\n// Movies\n// Documentaries\n// Animations\n// TV Series\n// TV Shows\n// Music\n// Sports\n// Demo\n// HQ Audio\n// Game\nconst getCategory = (videoType) => {\n  const typeMap = {\n    'Movies': 'movie',\n    'TV Series': 'tv',\n    'TV Shows': 'tv',\n    'Sports' : 'sport',\n    'Documentaries' : 'documentary',\n  };\n  \n  return undefined !== typeMap[videoType] ? typeMap[videoType]: ''\n};\n\nconst getMeta = (metaInfo, type) => {\n  if (metaInfo === '') {\n    return '';\n  }\n  let meta = metaInfo.split('\u00A0\u00A0\u00A0');\n  for(var i=0;i<meta.length;i++){\n      meta[i] = meta[i].split(\":\");\n  }\n  for(var i=0;i<meta.length;i++){\n    if (meta[i][0] === type) {\n      return meta[i][1].trim();\n    }\n  }\n  return '';\n\n}\n\n// \u83B7\u53D6\u622A\u56FE\nconst getImages = () => {\n  let imgList = [];\n  const images = $(\"td.rowhead:contains('\u7B80\u4ECB'):last\").next().find('img');\n  for (let i = 0; i < images.length; i++) {\n      imgList.push(images[i].getAttribute('src'));\n  }\n \n  return imgList;\n};\n\nconst getSource = (source, codes, resolution) => {\n  if (codes.match(/BD100|BD66/i)) {\n    return 'uhdbluray';\n  }\n  if (source.match(/Blu-ray/i) && resolution.match(/2160P|4K/i)) {\n    return 'uhdbluray';\n  }\n  return source.replace(/-/g, '').toLowerCase();\n};\n\nconst getVideoCodes = (codes) => {\n  if (codes === 'H.264/AVC') {\n    return 'h264';\n  }\n  \n  return codes.replace(/[.-]/g, '').toLowerCase();\n};\nconst getVideoType = (videoType) => {\n  if (videoType === 'WEB-DL') {\n    return 'web';\n  }\n  \n  return videoType.replace(/[.-]/g, '').toLowerCase();\n};\n\nconst getBDInfo = () => {\n  const quoteList = $('#kdescr').find('fieldset');\n  let bdinfo = '';\n  for (let i = 0; i < quoteList.length; i++) {\n    const quoteContent = quoteList[i].textContent;\n    if (quoteContent.includes('DISC INFO:') || quoteContent.includes('ViDEO BiTRATE')) {\n      bdinfo += `[fieldset]${quoteContent}[/fieldset]`;\n    }\n  }\n  return bdinfo;\n};\n\n// Resolution mapping sample\n// 1080p 1\n// 1080i 2\n// 720p 3\n// Other 5\n// 8K 7\n// 4K 6\n// \nconst getPTPResolution = (resolution) => {\n  if (resolution.match(/NTSC|PAL/ig)) {\n    return '480p';\n  } else if (resolution.match(/\\d{3}x\\d{3}/)) {\n    return '480p';\n  }\n  return resolution;\n};\nconst getAreaCode = () => {\n  const europeList = ['Albania', 'Andorra', 'Armenia', 'Austria', 'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Kazakhstan', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'];\n  let country = [];\n  const matchArray = $('#movieinfo div').text().match(/Country:\\s+([^\\n]+)/);\n  if (matchArray && matchArray.length > 0) {\n    country = matchArray[1].replace(/(,)\\s+/g, '$1').split(',');\n  }\n  if (country[0]) {\n    if (country[0].match(/USA|Canada/i)) {\n      return 'US';\n    } else if (europeList.includes(country[0])) {\n      return 'EU';\n    } else if (country[0].match(/Japan/i)) {\n      return 'JP';\n    } else if (country[0].match(/Korea/i)) {\n      return 'KR';\n    } else if (country[0].match(/Taiwan/i)) {\n      return 'TW';\n    } else if (country[0].match(/Hong Kong/i)) {\n      return 'HK';\n    } else if (country[0].match(/China/i)) {\n      return 'CN';\n    }\n  }\n  return 'OT';\n};\n", "import { CURRENT_SITE_NAME, TORRENT_INFO } from '../const';\nimport { getUrlParam, formatTorrentTitle } from '../common';\n\nexport default () => {\n  console.log('call getCHDInfo function')\n  const torrentDom = $(`#top`);\n  const metaInfo = $(\"td.rowhead:contains('\u57FA\u672C\u8CC7\u8A0A'):last\").next().text();\n  TORRENT_INFO.sourceSite = CURRENT_SITE_NAME;\n  TORRENT_INFO.movieName = $('#top').prop ('firstChild').nodeValue.trim();\n  TORRENT_INFO.movieAkaName = $(\"td.rowhead:contains('\u526F\u6A19\u984C'):last\").next().text();\n  TORRENT_INFO.imdbUrl = $('#kimdb>a').attr('href')|| '';\n  TORRENT_INFO.year = $('#top').text().match(/\\d{4}/g)[0];\n  TORRENT_INFO.title = $('#top').prop ('firstChild').nodeValue.trim();\n  TORRENT_INFO.subtitle = $(\"td.rowhead:contains('\u526F\u6A19\u984C'):last\").next().text();\n  let category = getMeta(metaInfo, '\u985E\u5225');\n  TORRENT_INFO.category = getCategory(category);\n  // let videoType = getMeta(metaInfo, '\u5A92\u4ECB');\n  // TORRENT_INFO.videoType = getVideoType(videoType);\n  let videoCodes = getMeta(metaInfo, '\u7DE8\u78BC');\n  TORRENT_INFO.videoCodes = getCodes(videoCodes);\n  TORRENT_INFO.audioCodes = getMeta(metaInfo, '\u97F3\u9891\u7F16\u7801');\n  // TORRENT_INFO.source = getPTPSource(source, codes, resolution);\n  TORRENT_INFO.resolution = getMeta(metaInfo, '\u89E3\u6790\u5EA6').toLowerCase();\n  // const { logs, bdinfo } = getPTPLogsOrBDInfo(torrentDom);\n  // TORRENT_INFO.logs = logs;\n  // TORRENT_INFO.bdinfo = bdinfo;\n  // TORRENT_INFO.mediaInfo = `${torrentDom.find('.mediainfo.mediainfo--in-release-description').next('blockquote').text()}`;\n  TORRENT_INFO.screenshots = getImages(torrentDom);\n  // TORRENT_INFO.area = getAreaCode();\n  // createSeedDom(torrentDom, TORRENT_INFO);\n  return TORRENT_INFO\n};\n\n// mapping sample:\n// <option value=\"401\">Movie(\u96FB\u5F71)/SD</option>\n// <option value=\"419\">Movie(\u96FB\u5F71)/HD</option>\n// <option value=\"420\">Movie(\u96FB\u5F71)/DVDiSo</option>\n// <option value=\"421\">Movie(\u96FB\u5F71)/Blu-Ray</option>\n// <option value=\"439\">Movie(\u96FB\u5F71)/Remux</option>\n// <option value=\"403\">TV Series(\u5F71\u5287/\u7D9C\u85DD)/SD</option>\n// <option value=\"402\">TV Series(\u5F71\u5287/\u7D9C\u85DD)/HD</option>\n// <option value=\"435\">TV Series(\u5F71\u5287/\u7D9C\u85DD)/DVDiSo</option>\n// <option value=\"438\">TV Series(\u5F71\u5287/\u7D9C\u85DD)/BD</option>\n// <option value=\"404\">\u7D00\u9304\u6559\u80B2</option>\n// <option value=\"405\">Anime(\u52D5\u756B)</option>\n// <option value=\"406\">MV(\u6F14\u5531)</option>\n// <option value=\"408\">Music(AAC/ALAC)</option>\n// <option value=\"434\">Music(\u7121\u640D)</option>\n// <option value=\"407\">Sports(\u904B\u52D5)</option>\n// <option value=\"422\">Software(\u8EDF\u9AD4)</option>\n// <option value=\"423\">PCGame(PC\u904A\u6232)</option>\n// <option value=\"427\">eBook(\u96FB\u5B50\u66F8)</option>\n// <option value=\"410\">AV(\u6709\u78BC)/HD Censored</option>\n// <option value=\"429\">AV(\u7121\u78BC)/HD Uncensored</option>\n// <option value=\"424\">AV(\u6709\u78BC)/SD Censored</option>\n// <option value=\"430\">AV(\u7121\u78BC)/SD Uncensored</option>\n// <option value=\"426\">AV(\u7121\u78BC)/DVDiSo Uncensored</option>\n// <option value=\"437\">AV(\u6709\u78BC)/DVDiSo Censored</option>\n// <option value=\"431\">AV(\u6709\u78BC)/Blu-Ray Censored</option>\n// <option value=\"432\">AV(\u7121\u78BC)/Blu-Ray Uncensored</option>\n// <option value=\"436\">AV(\u7DB2\u7AD9)/0Day</option>\n// <option value=\"425\">IV(\u5BEB\u771F\u5F71\u96C6)/Video Collection</option>\n// <option value=\"433\">IV(\u5BEB\u771F\u5716\u96C6)/Picture Collection</option>\n// <option value=\"411\">H-Game(\u904A\u6232)</option>\n// <option value=\"412\">H-Anime(\u52D5\u756B)</option>\n// <option value=\"413\">H-Comic(\u6F2B\u756B)</option>\n// <option value=\"409\">Misc(\u5176\u4ED6)</option></select>\n\nconst getCategory = (videoType) => {\n  if (videoType.match(/Movie/i)) {\n    return 'movie';\n  }\n  if (videoType.match(/TV/i)) {\n    return 'tv';\n  }\n  if (videoType.match(/Sports/i)) {\n    return 'sport';\n  }\n  return '';\n};\n\nconst getMeta = (metaInfo, type) => {\n  if (metaInfo === '') {\n    return '';\n  }\n  let meta = metaInfo.split('\u00A0\u00A0\u00A0');\n  for(var i=0;i<meta.length;i++){\n      meta[i] = meta[i].split(\":\");\n  }\n  for(var i=0;i<meta.length;i++){\n    if (meta[i][0] === type) {\n      return meta[i][1].trim();\n    }\n  }\n  return '';\n\n}\n\n// videoCodes mapping sample\n// H.264 1\n// VC-1 2\n// Xvid 3\n// MPEG-2 4\n// FLAC 5\n// APE 1\n// DTS 1\n// AC-3 1\n// WAV 1\n// MP3 1\n// MPEG-4 1\n// H.265 1\n// ALAC 1\n// AAC 1\n\nconst getCodes = (codes) => {\n\n  return codes.replace(/[.-]/g, '').toLowerCase();\n};\n\n// \u83B7\u53D6\u622A\u56FE\nconst getImages = () => {\n  let imgList = [];\n  const images = $(\"td.rowhead:contains('\u7C21\u4ECB'):last\").next().find('img');\n  for (let i = 0; i < images.length; i++) {\n      imgList.push(images[i].getAttribute('src'));\n  }\n \n  return imgList;\n};\n\nconst getPTPSource = (source, codes, resolution) => {\n  if (codes.match(/BD100|BD66/i)) {\n    return 'uhdbluray';\n  }\n  if (source.match(/Blu-ray/i) && resolution.match(/2160P|4K/i)) {\n    return 'uhdbluray';\n  }\n  return source.replace(/-/g, '').toLowerCase();\n};\nconst getPtpCodes = (codes) => {\n  if (codes === 'BD66' || codes === 'BD100') {\n    return 'hevc';\n  }\n  if (codes.startsWith('BD')) {\n    return 'h264';\n  }\n  if (codes.startsWith('DVD')) {\n    return 'mpeg2';\n  }\n  return codes.replace(/[.-]/g, '').toLowerCase();\n};\nconst getVideoType = (videoType) => {\n  if (videoType === 'WEB-DL') {\n    return 'web';\n  }\n  \n  return videoType.replace(/[.-]/g, '').toLowerCase();\n};\nconst getPTPResolution = (resolution) => {\n  if (resolution.match(/NTSC|PAL/ig)) {\n    return '480p';\n  } else if (resolution.match(/\\d{3}x\\d{3}/)) {\n    return '480p';\n  }\n  return resolution;\n};\nconst getAreaCode = () => {\n  const europeList = ['Albania', 'Andorra', 'Armenia', 'Austria', 'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Kazakhstan', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'];\n  let country = [];\n  const matchArray = $('#movieinfo div').text().match(/Country:\\s+([^\\n]+)/);\n  if (matchArray && matchArray.length > 0) {\n    country = matchArray[1].replace(/(,)\\s+/g, '$1').split(',');\n  }\n  if (country[0]) {\n    if (country[0].match(/USA|Canada/i)) {\n      return 'US';\n    } else if (europeList.includes(country[0])) {\n      return 'EU';\n    } else if (country[0].match(/Japan/i)) {\n      return 'JP';\n    } else if (country[0].match(/Korea/i)) {\n      return 'KR';\n    } else if (country[0].match(/Taiwan/i)) {\n      return 'TW';\n    } else if (country[0].match(/Hong Kong/i)) {\n      return 'HK';\n    } else if (country[0].match(/China/i)) {\n      return 'CN';\n    }\n  }\n  return 'OT';\n};\n", "\nimport { CURRENT_SITE_NAME, CURRENT_SITE_INFO} from '../const';\n\nimport getPTPInfo from './ptp';\nimport getCHDInfo from './chd'\nimport getMTeamInfo from './mteam'\n\nlet getTorrentInfo = getPTPInfo;\n\nswitch(CURRENT_SITE_NAME) {\n\tcase 'PTP':\n\t\tgetTorrentInfo = getPTPInfo;\n\t\tbreak;\n\tcase 'CHD':\n\t\tgetTorrentInfo = getCHDInfo;\n\t\tbreak;\n\tcase 'MTeam':\n\t\tgetTorrentInfo = getMTeamInfo;\n\t\tbreak;\n}\n\nexport default getTorrentInfo;", "export default GM_addStyle(`\n.seed-dom h4{\n  text-align: center;\n  margin: 0;\n  margin-bottom: 15px;\n}\n.site-list,.search-list{\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n}\n.seed-dom li {\n  margin-right: 5px;\n  padding-right: 5px;\n  border-right: 1px solid #fff;\n}\n.seed-dom li:last-child{\n  border: none;\n}\n.seed-dom li a{\n  font-weight: 600;\n}\n.upload-section,.douban-section{\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n  align-items: center;\n}\n.upload-section .upload-status,.douban-section .douban-status{\n  margin-left: 5px;\n  font-size: 14px;\n}\n#img-transfer,#douban-info{\n  line-height: 1;\n  white-space: nowrap;\n  cursor: pointer;\n  background: #fff;\n  border: 1px solid #dcdfe6;\n  color: #606266;\n  -webkit-appearance: none;\n  text-align: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: .1s;\n  font-weight: 500;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  padding: 8px 20px;\n  font-size: 14px;\n  border-radius: 4px;\n  margin:0;\n  margin-right: 5px;\n}\n#img-transfer:hover,#douban-info:hover {\n  background: #fff;\n  border-color: #409eff;\n  color: #409eff\n}\n#img-transfer.is-disabled, #img-transfer.is-disabled:hover,#douban-info.is-disabled, #douban-info.is-disabled:hover {\n  color: #c0c4cc;\n  cursor: not-allowed;\n  background-image: none;\n  background-color: #fff;\n  border-color: #ebeef5;\n}\n`);\n", "// \u5165\u53E3\u6587\u4EF6\nimport { CURRENT_SITE_NAME, CURRENT_SITE_INFO, DOUBAN_SEARCH_API, API_KEY, DOUBAN_API_URL, PT_GEN_API, PT_SITE, SEARCH_SITE_MAP } from './const';\nimport { fillTargetForm } from './target';\nimport { getSubTitle, getUrlParam } from './common';\nimport getTorrentInfo from './source';\n// eslint-disable-next-line no-unused-vars\nimport style from './style';\n\nlet torrentData = null;\n\n/*\n  * \u5411\u6E90\u7AD9\u70B9\u9875\u9762\u6CE8\u5165DOM\n  * @param {torrentDom} DOM\u7684\u7236\u8282\u70B9JQ\u5BF9\u8C61\n  * @param {torrentDom} \u5F53\u524D\u79CD\u5B50\u7684\u8BE6\u60C5\n  * @return\n  * */\nconst createSeedDom = (torrentDom) => {\n  const siteList = Object.keys(PT_SITE).map(siteName => {\n    const { url, uploadPath } = PT_SITE[siteName];\n    if (PT_SITE[siteName].asTarget) {\n      return `<li><a href=\"${url}${uploadPath}#torrentInfo=${encodeURIComponent(JSON.stringify(torrentData))}\" target=\"_blank\">${siteName}</a></li>`;\n    }\n    return '';\n  });\n  const searchList = Object.keys(SEARCH_SITE_MAP).map(siteName => {\n    const imdbId = torrentData.imdbUrl ? /tt\\d+/.exec(torrentData.imdbUrl)[0] : '';\n    let url = '';\n    let searchKeyWord = imdbId || torrentData.movieAkaName || torrentData.movieName;\n    if (siteName === 'TTG' && imdbId) {\n      searchKeyWord = searchKeyWord.replace('tt', 'imdb');\n    }\n    url = SEARCH_SITE_MAP[siteName].replace('{imdbid}', searchKeyWord);\n    url = url.replace('{searchArea}', imdbId ? '4' : '0');\n    return `<li><a href=\"${url}\" target=\"_blank\">${siteName}</a></li>`;\n  });\n  const doubanDom = CURRENT_SITE_INFO.needDoubanInfo\n    ? `<h4>\u83B7\u53D6\u8C46\u74E3\u7B80\u4ECB</h4>\n  <div class=\"douban-section\">\n    <button id=\"douban-info\">\u5F00\u59CB\u83B7\u53D6</button>\n    <div class=\"douban-status\"></div>\n  </div>`\n    : '';\n  const seedDom = `\n  <div class=\"seed-dom movie-page__torrent__panel\">\n    <h4>\u4E00\u952E\u8F6C\u79CD \uD83C\uDFAC</h4>\n    <ul class=\"site-list\">\n      ${siteList.join('')}\n    </ul>\n    ${doubanDom}\n    <h4>\u8F6C\u7F29\u7565\u56FE \u23EB</h4>\n    <div class=\"upload-section\">\n      <button id=\"img-transfer\">\u5F00\u59CB\u8F6C\u6362</button>\n      <div class=\"checkbox\">\n        <input type=\"checkbox\" id=\"nsfw\">\n        <label for=\"nsfw\">\u662F\u5426\u4E3ANSFW</label>\n      </div>\n      <div class=\"upload-status\"></div>\n    </div>\n    <h4>\u5FEB\u901F\u68C0\u7D22 \uD83D\uDD0D</h4>\n    <ul class=\"search-list\">\n      ${searchList.join('')}\n    </ul>\n  </div>\n  `;\n  torrentDom.prepend(seedDom);\n};\n/*\n  * \u66F4\u65B0\u79CD\u5B50\u4FE1\u606F\u540E\u9700\u8981\u904D\u5386\u76EE\u6807\u7AD9\u70B9\u94FE\u63A5\u8FDB\u884C\u53C2\u6570\u66FF\u6362\n  * @param {any}\n  * @return\n  * */\nconst replaceTorrentInfo = () => {\n  $('.site-list a').each((index, link) => {\n    const torrentInfo = encodeURIComponent(JSON.stringify(torrentData));\n    const newHref = $(link).attr('href').replace(/(#torrentInfo=)(.+)/, `$1${torrentInfo}`);\n    $(link).attr('href', newHref);\n  });\n};\nconst transferImgs = () => {\n  const statusDom = $('.upload-section .upload-status');\n  let imgList = torrentData.screenshots;\n  try {\n    if (imgList.length < 1) {\n      throw new Error('\u83B7\u53D6\u56FE\u7247\u5217\u8868\u5931\u8D25');\n    }\n    imgList = imgList.join('\\n');\n    const isNSFW = $('#nsfw').is(':checked');\n    const params = encodeURI(`imgs=${imgList}&content_type=${isNSFW ? 1 : 0}&max_th_size=300`);\n    statusDom.text('\u8F6C\u6362\u4E2D...');\n    $('#img-transfer').attr('disabled', true).addClass('is-disabled');\n    GM_xmlhttpRequest({\n      url: 'https://pixhost.to/remote/',\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\n      },\n      data: params,\n      onload (res) {\n        $('#img-transfer').removeAttr('disabled').removeClass('is-disabled');\n        const data = res.responseText.match(/(upload_results = )({.*})(;)/);\n        if (!data) {\n          throw new Error('\u4E0A\u4F20\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5');\n        }\n        let imgResultList = [];\n        if (data && data.length) {\n          imgResultList = JSON.parse(data[2]).images;\n          if (imgResultList.length) {\n            torrentData.screenshots = imgResultList.map(imgData => {\n              return `[url=${imgData.show_url}][img]${imgData.th_url}[/img][/url]`;\n            });\n            replaceTorrentInfo();\n            statusDom.text('\u8F6C\u6362\u6210\u529F\uFF01');\n          }\n        } else {\n          throw new Error('\u4E0A\u4F20\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5');\n        }\n      },\n    });\n  } catch (error) {\n    $('#img-transfer').removeAttr('disabled').removeClass('is-disabled');\n    statusDom.text(error.message);\n  }\n};\nconst getDoubanLink = () => {\n  const doubanLink = $('.page__title>a').attr('href');\n  if (doubanLink && doubanLink.match('movie.douban.com')) {\n    torrentData.doubanUrl = doubanLink;\n    getDoubanInfo();\n    return false;\n  }\n  if (torrentData.imdbUrl) {\n    const imdbId = /tt\\d+/.exec(torrentData.imdbUrl)[0];\n    GM_xmlhttpRequest({\n      method: 'GET',\n      url: `${DOUBAN_SEARCH_API}/${imdbId}`,\n      onload (res) {\n        const data = JSON.parse(res.responseText);\n        console.log(data);\n        if (data && data.data) {\n          torrentData.doubanUrl = `https://movie.douban.com/subject/${data.data.id}`;\n          getDoubanInfo();\n        }\n      },\n    });\n  } else {\n    GM_xmlhttpRequest({\n      method: 'GET',\n      url: `${DOUBAN_API_URL}/search/weixin?q=${torrentData.movieName}&start=0&count=1&apiKey=${API_KEY}`,\n      onload (res) {\n        const data = JSON.parse(res.responseText);\n        console.log(data);\n        if (data && data.items && data.items.length > 0) {\n          torrentData.doubanUrl = `https://movie.douban.com/subject/${data.items[0].id}`;\n          getDoubanInfo();\n        }\n      },\n    });\n  }\n};\nconst getDoubanInfo = () => {\n  const { doubanUrl } = torrentData;\n  const statusDom = $('.douban-section .douban-status');\n  try {\n    if (doubanUrl) {\n      statusDom.text('\u83B7\u53D6\u4E2D...');\n      GM_xmlhttpRequest({\n        method: 'GET',\n        url: `${PT_GEN_API}?url=${doubanUrl}`,\n        onload (res) {\n          const data = JSON.parse(res.responseText);\n          if (data && data.success) {\n            torrentData.doubanInfo = data.format;\n            getSubTitle(data);\n            replaceTorrentInfo();\n            statusDom.text('\u83B7\u53D6\u6210\u529F');\n          } else {\n            throw new Error('\u83B7\u53D6\u8C46\u74E3\u4FE1\u606F\u5931\u8D25');\n          }\n        },\n      });\n    } else {\n      throw new Error('\u65E0\u6CD5\u83B7\u53D6\u8C46\u74E3\u4FE1\u606F');\n    }\n  } catch (error) {\n    statusDom.text(error.message);\n  }\n};\nconst paramsMatchArray = location.hash && location.hash.match(/(^|#)torrentInfo=([^#]*)(#|$)/);\nlet torrentParams = (paramsMatchArray && paramsMatchArray.length > 0) ? paramsMatchArray[2] : null;\nif (CURRENT_SITE_NAME) {\n  if (torrentParams && CURRENT_SITE_INFO.asTarget) {\n    torrentParams = JSON.parse(decodeURIComponent(torrentParams));\n    fillTargetForm(torrentParams);\n  }\n  if (CURRENT_SITE_INFO.asSource && !location.pathname.match(/upload/ig)) {\n    // \u5411\u5F53\u524D\u6240\u5728\u7AD9\u70B9\u6DFB\u52A0\u6309\u94AE\u7B49\u5185\u5BB9\n    torrentData = getTorrentInfo();\n    console.log('torrentData:'+JSON.stringify(torrentData))\n    let torrentInsertDom = CURRENT_SITE_INFO.seedDomSelector;\n    if (CURRENT_SITE_NAME === 'PTP') {\n      const torrentId = getUrlParam('torrentid');\n      torrentInsertDom = $(`#torrent_${torrentId} >td`);\n    }\n    if (CURRENT_SITE_NAME === 'CHD' || CURRENT_SITE_NAME === 'MTeam') {\n      torrentInsertDom = $(`#top`);\n    }\n    createSeedDom(torrentInsertDom);\n    // \u539F\u56FE\u8F6C\u7F29\u7565\u56FE\n    if ($('#img-transfer')) {\n      $('#img-transfer').click(() => {\n        transferImgs();\n      });\n    }\n    if ($('#douban-info')) {\n      $('#douban-info').click(() => {\n        getDoubanLink();\n      });\n    }\n  }\n}\n\n;\n"],
  "mappings": "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",
  "names": []
}
